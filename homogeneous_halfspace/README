----------------------------------------------------------------------
README
----------------------------------------------------------------------

This examples creates a homogeneous halfspace, i.e. a single volume block with a
constant elastic material property, using CUBIT and runs a forward simulation.

step-by-step tutorial:

0. check that all software is available (or that modules are loaded):
     intel/openmpi, cubit, scotch, python, gnuplot

1. configure package:

   - determine the path for your compiled version of SCOTCH

   - From the SPECFEM3D root directory SPECFEM3D/
     configure the package, e.g. using intel's ifort compiler:
     > cd SPECFEM3D
     > ./configure F90=ifort --with-scotch-dir=/my_path_to_scotch

     If successful, this will generate the files in src/shared/:
     Makefile, constants.h, and precision.h, among others

     note: the same compiler used for SCOTCH must be used for SPECFEM3D (ifort or gfortran)

   - copy two run scripts from utils/Cluster/ into SPECFEM3D/, e.g.,
     pbs/go_generate_databases_pbs.bash
     pbs/go_solver_pbs.bash


2. create mesh:

   - change to the examples directory SPECFEM3D/examples/homogeneous_halfspace:
     > cd examples/homogeneous_halfspace

   - open the cubit GUI:
     > claro (or cubit)

     then run meshing script:
     claro -> Menu "Tools" -> "Play Journal File" ... and select file: "block_mesh.py"

     if everything goes fine, this creates the ten mesh files in subdirectory MESH/:
        MESH/absorbing_surface_file_bottom
        MESH/absorbing_surface_file_xmax
        MESH/absorbing_surface_file_xmin
        MESH/absorbing_surface_file_ymax
        MESH/absorbing_surface_file_ymin
        MESH/free_surface_file
        MESH/materials_file
        MESH/mesh_file
        MESH/nodes_coords_file
        MESH/nummaterial_velocity_file

     the cubit graphics window should show a mesh similar to the file homogeneous.png


3. decompose mesh files:

   - compile decomposer in directory SPECFEM3D/:
     > make xdecompose_mesh_SCOTCH

   - run decomposer
     (example assumes 4 partitions with mesh files in examples/homogeneous_halfspace/MESH/)
     > ./bin/xdecompose_mesh_SCOTCH 4 examples/homogeneous_halfspace/MESH/ in_out_files/DATABASES_MPI/

     this creates mesh partitions "proc000***_Database" in directory in_out_files/DATABASES_MPI/.

     you can then specify "../in_out_files/DATABASES_MPI" in "Par_file" for your "LOCAL_PATH".

     (for your convenience, these resulting database files are also provided in the example's
      DATABASES-default/ directory for comparison.)

     note 1: the program xdecompose_mesh_SCOTCH is a serial program (runs on 1 core)
     note 2: alternatively, run decomposer on a compute node using
             utils/Cluster/pbs/go_partition_pbs.bash


4. generate databases:

   - compile generate_databases in directory SPECFEM3D/ :
     > make xgenerate_databases

   - submit job script
     > qsub go_generate_databases_pbs.bash

     note 1: this script will need to be tailored to your cluster, e.g.,
     > bsub < go_generate_databases_lsf.bash
     note 2: you may want to explicity specify the desired queue

     this will create binary mesh files, e.g. "proc000***_external_mesh.bin"
     in directory in_out_files/DATABASES_MPI/.


5. run simulation:

   - compile specfem3D:
     > make xspecfem3D

   - submit job script:
     > qsub go_solver_pbs.bash

     note 1: this script will need to be tailored to your cluster, e.g.,
             > bsub < go_solver_lsf.bash
     note 2: the simulation runs on 4 cores and should take about 5 minutes,
             and you can track the progress with the timestamp files
             generated in in_out_files/OUTPUT_FILES/

   - when the job is complete, you should have 3 sets (semd,semv,sema)
     of 672 (ls -1 *semd | wc) file in the directory in_out_files/OUTPUT_FILES,
     as well as 3 timestamp****** files


6. check with 6 reference seismograms in
      SPECFEM3D/examples/homogeneous_halfspace/REF_SEIS/

   - execute gnuplot script
     > cd SPECFEM3D/examples/homogeneous_halfspace/REF_SEIS
     > gnuplot

         gnuplot> load "X1-50.BXZ.gnuplot"

     You should see a figure in a render window.
     Writing the figure to a file may depend on your gnuplot settings.
     One example to generate a postscript is shown below:

         gnuplot> load "X1-50.BXZ.gnuplot"
         gnuplot> set term postscript color solid
         Terminal type set to 'postscript'
         Options are 'landscape noenhanced color colortext \
            solid dashlength 1.0 linewidth 1.0 defaultplex \
            palfuncparam 2000,0.003 \
            butt "Helvetica" 14'
         gnuplot> set output 'my.ps'
         gnuplot> replot
         gnuplot> quit


7. plot your output seismograms in SPECFEM3D/in_out_files/OUTPUT_FILES/

   - copy gnuplot script X1-50.BXZ.gnuplot to in_out_files/OUTPUT_FILES/
   - execute same commands as above
   - you should see the same image as generated from the reference seismograms

===========================================================

