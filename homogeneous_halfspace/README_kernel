----------------------------------------------------------------------
README - single travel-time adjoint kernel
----------------------------------------------------------------------

This example creates a travel-time adjoint source for a single receiver
station and runs a kernel simulation.

note: make yourself familiar with how to run a forward simulation.
      a detailed step-by-step tutorial is given in the file
      /SPECFEM3D/examples/homogeneous_halfspace/README


step-by-step kernel tutorial:


1. run forward simulation with saving wavefields:

   - assuming that you have configured and setup the root directory
     /SPECFEM3D as described in the step-by-step tutorial described
     in the file /SPECFEM3D/examples/homogeneous_halfspace/README,
     update the Par_file:

     > cd /SPECFEM3D
     > ./UTILS/change_simulation_type.pl -F

     or change manually in /SPECFEM3D/in_data_files/Par_file:
     ...
     # forward or adjoint simulation
     SIMULATION_TYPE                 = 1
     SAVE_FORWARD                    = .true.
     ...

   - run the forward simulation, submitting the job script:
     > qsub go_solver_pbs.bash

   you should have now the necessary seismograms in directory in_out_files/OUTPUT_FILES/:
     ...
     in_out_files/OUTPUT_FILES/X20.BHE.semd
     in_out_files/OUTPUT_FILES/X20.BHN.semd
     in_out_files/OUTPUT_FILES/X20.BHZ.semd
     ...


2. create adjoint source files:

   - compile the utility xcut_velocity:
     > cd /SPECFEM3D/UTILS/cut_velocity
     > make

   - specify which receiver station becomes an adjoint source,
     e.g. using the seismograms from station 20, and create the
     corresponding adjoint source files:
     > cd /SPECFEM3D
     > ./UTILS/cut_velocity/xcut_velocity 10. 25. 0 in_out_files/OUTPUT_FILES/X20.DB.BH*.semd

   - make designated directory for adjoint sources:
     > mkdir in_out_files/SEM/
     > mv in_out_files/OUTPUT_FILES/*.adj in_out_files/SEM/
     > cd in_out_files/SEM/
     > rename .semd.adj .adj *.adj

     this should create the files:
          in_out_files/SEM/X20.DB.BHE.adj
          in_out_files/SEM/X20.DB.BHN.adj
          in_out_files/SEM/X20.DB.BHZ.adj

   - setup adjoint stations file STATIONS_ADJOINT containing the receiver stations locations
     which will have adjoint source files in in_out_files/SEM/:
     > cd /SPECFEM3D
     > cp examples/homogeneous_halfspace/STATIONS_ADJOINT in_data_files/


3. run adjoint simulation with restored backward wavefields:

   - update the Par_file:
     > cd /SPECFEM3D
     > ./UTILS/change_simulation_type.pl -b

     or change manually in /SPECFEM3D/in_data_files/Par_file:
     # forward or adjoint simulation
     SIMULATION_TYPE                 = 3
     SAVE_FORWARD                    = .false.


   - run the backward simulation, submitting the job script:
     > qsub go_solver_pbs.bash


     this will create adjoint kernel files in directory in_out_files/DATABASES_MPI/
     according to travel-time kernels as e.g. defined in Tromp et al. (2005) :
          in_out_files/DATABASES_MPI/proc000***_alpha_kernel.bin
          in_out_files/DATABASES_MPI/proc000***_beta_kernel.bin
          in_out_files/DATABASES_MPI/proc000***_kappa_kernel.bin
          in_out_files/DATABASES_MPI/proc000***_mu_kernel.bin
          in_out_files/DATABASES_MPI/proc000***_rho_kernel.bin
          in_out_files/DATABASES_MPI/proc000***_rhop_kernel.bin


   - visualize with Paraview, e.g. :
      > cd /SPECFEM3D
      > make xcombine_vol_data
      > cd bin/
      > ./xcombine_vol_data 0 3 kappa_kernel ../in_out_files/DATABASES_MPI/ ../in_out_files/OUTPUT_FILES/ 1

     where we use the partitions with id 0 to 3 to include all 4 processor partitions.


     To convert the mesh format to VTK, you can use utils/Visualization/Paraview/mesh2vtu:
      > cd utils/Visualization/Paraview/mesh2vtu
     Modify the Makefile according to your library paths and compile mesh2vtu:
      > make
     the modify the paths to your mesh2vtu installation in the utils/Visualization/Paraview/mesh2vtu.pl file,
     and run:
      > mesh2vtu.pl -i in_out_files/OUTPUT_FILES/kappa_kernel.mesh -o in_out_files/OUTPUT_FILES/kappa_kernel.vtu

     which creates the *.vtu file:  Paraview -> Menu File -> Open ...
                                       (and choose the kappa_kernel.vtu)





