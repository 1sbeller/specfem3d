----------------------------------------------------------------------
README
----------------------------------------------------------------------

This example creates a single volume block and assigns a tomographic model
as material property to run a forward simulation.

step-by-step tutorial:

0. run the example in the directory homogeneous_halfspace

1. create mesh:

   - change to the examples directory SPECFEM3D/examples/tomographic_model:
     > cd examples/tomographic_model

   - open the cubit GUI:
     > claro (or cubit)

     then run meshing script:
     claro -> Menu "Tools" -> "Play Journal File" ... and select file: "tomoblock_mesh.py"

     this creates all the mesh files in subdirectory MESH/


2. create tomography_model file:

    in examples/tomographic_model, run bash script:

    > sh create_tomography_model_file.sh

    which creates an example model: tomography_model.xyz
    ( elastic model with a constant velocity gradient with depth)

    copy this file into directory SPECFEM3D/in_data_files/


3. decompose mesh files:

    - run decomposer in directory decompose_mesh_SCOTCH/:
      (example assumes 4 partitions with mesh files in OUTPUT_FILES/)
      > cd SPECFEM3D
      > make
      > ./bin/xdecompose_mesh_SCOTCH 4 examples/tomographic_model/MESH/ in_out_files/DATABASES_MPI/

      which creates mesh partitions "proc0000***_Database" in directory "DATABASES_MPI".
      you can then specify "../in_out_files/DATABASES_MPI" in "Par_file" for your "LOCAL_PATH"


4. generate databases:

   - compile generate_databases from SPECFEM3D/ :
     > cd SPECFEM3D
     > make xgenerate_databases

   - submit job script
     > qsub go_generate_databases_pbs.bash


5. run simulation:

   - copy three files -- Par_file CMTSOLUTION STATIONS -- from
      SPECFEM3D/examples/tomographic_model/ to SPECFEM3D/in_data_files/

   - compile specfem3D:
     > make xspecfem3D

   - submit job script:
     > qsub go_solver_pbs.bash

   - when the job is complete, you should have 3 sets (semd,semv,sema)
     of 672 (ls -1 *semd | wc) in the directory in_out_files/OUTPUT_FILES,
     as well as 3 timestamp****** files

===========================================================

