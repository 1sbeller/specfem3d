
---------- DK DK new issues added by Dimitri on January 21, 2015, following some emails I exchanged with Zhinan:

Subject: Re: specfem3d
Date: Thu, 22 Jan 2015 00:02:29 +0100
From: Dimitri Komatitsch
Organization: CNRS, Marseille, France
To: Zhang, Chang-Hua
CC: Zhinan Xie

Dear Chang-hua,

Thanks! Let me forward this to Zhinan, so that he can have a look at
page 4 of the PDF file you sent me, which shows that SPECFEM3D currently
stops when one tries to use CPML when the interior of the domain has
viscoelasticity.

Thanks,
Best regards,

Dimitri.

-------------------------

Subject:  Re: [specfem3d] Runing both PML and attenuation causes error
results (#356)
Date:   Tue, 20 Jan 2015 15:11:47 -0800
From:   specfem3d-zhang-ksu
To:   geodynamics/specfem3d
CC:   Dimitri Komatitsch

Thanks, Dimitri. I have replaced the code segment by the following one,

|  ! if both PML and attenuation are used, the PML region must be elastic
  if (PML_CONDITIONS .and. (.not. backward_simulation) .and. NSPEC_CPML > 0) then
     ! do not merge this second line with the first using an ".and." statement
     ! because array is_CPML() is unallocated when PML_CONDITIONS is false
     if (is_CPML(ispec)) then
        ! PML region
        ispec_CPML = spec_to_CPML(ispec)
        DO_LOOP_IJK

          dummyx_loc_att(INDEX_IJK) = PML_displ_old(1,INDEX_IJK,ispec_CPML)
          dummyy_loc_att(INDEX_IJK) = PML_displ_old(2,INDEX_IJK,ispec_CPML)
          dummyz_loc_att(INDEX_IJK) = PML_displ_old(3,INDEX_IJK,ispec_CPML)

        ENDDO_LOOP_IJK
     else if (ATTENUATION .and. COMPUTE_AND_STORE_STRAIN) then
        ! attenuation region
        DO_LOOP_IJK
           iglob = ibool(INDEX_IJK,ispec)
           dummyx_loc_att(INDEX_IJK) = deltat*veloc(1,iglob)
           dummyy_loc_att(INDEX_IJK) = deltat*veloc(2,iglob)
           dummyz_loc_att(INDEX_IJK) = deltat*veloc(3,iglob)

        ENDDO_LOOP_IJK
     endif
  else if (ATTENUATION .and. COMPUTE_AND_STORE_STRAIN) then
     ! only attenuation
     ! use first order Taylor expansion of displacement for local storage of stresses
     ! at this current time step, to fix attenuation in a consistent way
     DO_LOOP_IJK
        iglob = ibool(INDEX_IJK,ispec)
        dummyx_loc_att(INDEX_IJK) = deltat*veloc(1,iglob)
        dummyy_loc_att(INDEX_IJK) = deltat*veloc(2,iglob)
        dummyz_loc_att(INDEX_IJK) = deltat*veloc(3,iglob)
     ENDDO_LOOP_IJK

  endif
|

And similarly the other places, the results are much better, but I have
a strong spike at the source location all the time, no idea what is
going on.

----------------------------------------------------------

Subject: Re: [specfem3d] Runing both PML and attenuation causes error results (#356)
Date: Tue, 20 Jan 2015 23:58:21 +0100
From: Dimitri Komatitsch <komatitsch@lma.cnrs-mrs.fr>
Organization: CNRS, Marseille, France
To: geodynamics/specfem3d , specfem3d-zhang-ksu
CC: Zhinan Xie

Hi,

Yes, PML in the 3D code is currently for acoustic/elastic media only
(i.e. viscoelasticity cannot be turned on).

Let me cc my colleague Zhinan Xie because he is currently working on the
code and thus he could probably remove that constraint (note that if so
PML will *not* be perfectly matched strictly speaking because it is
written without attenuation, thus the viscoelastic medium will be in
contact with an elastic PML; but that works fine in practice if Q
factors are not too small (typically not below 50 or so).

PS for Zhinan: Zhang Ksu is right, there is no reason to stop the code
in that case, we should just run with an elastic PML in contact with the
viscoelastic medium, as we do in the 2D code. Thus the code in his email
below should be slightly modified (and the PML arrays should be
allocated even if attenuation is on I guess).

Thanks,
Dimitri.

On 01/20/2015 12:00 AM, specfem3d-zhang-ksu wrote:
> I am running the example of
> homogeneous_halfspace_HEX8_elastic_absorbing_CPML_5sides by turning
> ATTENUATION false or true in the Par_file and change Qmu in the
> nummaterial_velocity_file.
>
> The result with ATTENUATION=.true. is totally wrong. Is it a problem
> that the example is only setup for CPML or there is a bug in the code?
>
> By examining the source code, I think that there is a bug is more
> probable. For example, in the
> subroutine compute_forces_viscoelastic_Dev_5p, there is code segment
> ! use first order Taylor expansion of displacement for local storage of
> stresses
> ! at this current time step, to fix attenuation in a consistent way
> if (ATTENUATION .and. COMPUTE_AND_STORE_STRAIN) then
> DO_LOOP_IJK
> iglob = ibool(INDEX_IJK,ispec)
> dummyx_loc_att(INDEX_IJK) = deltat/veloc(1,iglob)
> dummyy_loc_att(INDEX_IJK) = deltat/veloc(2,iglob)
> dummyz_loc_att(INDEX_IJK) = deltat*veloc(3,iglob)
> ENDDO_LOOP_IJK
> else if (PML_CONDITIONS .and. (.not. backward_simulation) .and.
> NSPEC_CPML > 0) then
> ! do not merge this second line with the first using an ".and." statement
> ! because array is_CPML() is unallocated when PML_CONDITIONS is false
> if (is_CPML(ispec)) then
> DO_LOOP_IJK
> iglob = ibool(INDEX_IJK,ispec)
> dummyx_loc_att(INDEX_IJK) = displ_old(1,iglob)
> dummyy_loc_att(INDEX_IJK) = displ_old(2,iglob)
> dummyz_loc_att(INDEX_IJK) = displ_old(3,iglob)
> ENDDO_LOOP_IJK
> endif
> endif
>
> which seams to indicate we can not have both CPML and attenuation.
>
> Has anyone experienced this issue?

==============================================================================
==============================================================================
==============================================================================

For SPECFEM3D PMLs:
-------------------

1/ add PML support to the internal mesher and also PML support for adjoint runs, see https://github.com/geodynamics/specfem3d/issues/312

Regarding PML for SPECFEM3D, what is currently missing is:

- support for the internal mesher

- support for adjoint runs; the current code works fine for forward runs but cannot time-revert the field inside the PML for SIMULATION_TYPE = 3 (when done directly that is unstable because total energy is not conserved, as for viscoelasticity). That is easy to solve by storing the inner edge of the PML instead of the outer edge and thus not back-propagating anything inside the PML itself; Zhinan has already implemented that successfully in the 2D code two years ago, but it is not cut and pasted in the 3D code yet.

Let us add both options.

Subject: Re: adjoint and PML
Date: Tue, 28 Oct 2014 23:52:00 +0100
From: Dimitri Komatitsch
Organization: CNRS, Marseille, France
To: xiezhinan ,  Vadim MONTEILLER

Hi Zhinan,

OK, thank you very much for your answer. I suggest we proceed as you
plan below, i.e. in the next few days you can start cleaning the code
(please do a git pull because Clément and Yi as well as Vadim have
changed many things in the code)  and you can start merging all your
contributions from the last few months, which are not committed yet.
Then, as soon as all of this is merged Vadim can have a look at how to
use PML for adjoint problems

(as we discussed, what is needed is to store the wave field on the inner
edge of the PML layers)

If you have a working version of that for the 2D code you can tell
Vadim, from the 2D code Vadim could then guess how to implement that in
the 3D code as well.

Thanks again,
Best wishes,

Dimitri.

On 10/28/2014 01:52 PM, xiezhinan wrote:
> Hi Vadim,
>
> To be honest, in specfem3D, we do not do too much.
> Though we have implement an initial version of PML for adjoint inverison
> with SPECFEM3D.
> But that part of code do not have tested seriously.
>
> Since we were struggling with the instability induced by PML in forward
> simulation.
> We have acheived to make it stable around July 2014.
>
> But then, due to my delay, I do not commit the recent change in SPECFEM3D.
> I will work every day with 6 hours around on the SPECFEM3D starting from
> this Saturday.
> I can not promise again that when I can finish that, since I have
> already promised twice to finish that but failed.
>
> If it is fine for you, you can start before my work.
> I will work carefully that I will not erase you modification in the code.
>
> Thank you so much.
> Best regards,
> Zhinan
>
>
> At 2014-10-28 02:00:43, "Vadim MONTEILLER" wrote:
>>Hello Zhinan,
>>
>>I plan to use PLM in specfem3D for the adjoint and hybrid method.
>>Dimitri told me that you began to work on it. Can you tell me what you did?
>>Maybe I could resart before your work?
>>
>>Thank you
>>
>>Vadim

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

2/ Bug in xgeneratedatabes with C-PML?, see https://github.com/geodynamics/specfem3d/issues/273

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

3/ add a more flexible function for scale factor and fix one error in create_mass_matrices.f90:

Date:   Tue, 24 Jun 2014 07:15:03 +0800
From:   谢志南 <xiezhinan1984
To:   Dimitri Komatitsch
CC:   Clément Durochat, Paul Cristini, Elliott Sales de Andrade

Dear Dimitri,

No problem, I will add that.

Thank you so much.
Best regards,
Zhinan


2014-06-22 23:36 GMT+08:00 Dimitri Komatitsch:

    Dear Zhinan,

    Great, thanks! Yes, I think it is best if you add it as a parameter
    to the Par_file. Could you please do it and commit the change to Git?
    (I have already accepted your previous Git pull request from two
    days ago)

    Thanks a lot,
    Best wishes,

    Dimitri.

    xiezhinan1984 wrote:

        Dear Dimitri,

        I am back. Thank you so much.
        Currently we set by default K_x =1. Then we need to change
        K_MAX_PML to set K_x >1.

        Or we introduce a parameter in Par_file to change?
        I will remove the stop statement and also commit other changes.

        Best regards,
        Zhinan


        2014-06-18 18:21 GMT+08:00 Dimitri Komatitsch:

            Dear Zhinan,

            Thank you very much. I have accepted your pull request.

            However, could you see this comment by Elliott about a
            potential problem?

              QuLogic commented on e879ce3
            src/generate_databases/pml___set_local_dampingcoeff.f90
            Line 321

            "Hmm, won't K_x always be 1 here? Or should people change
            K_MAX_PML if they want it different?"

            Also, could you remove the stop statements for fluid-solid
            PMLs, if you
            think that the code is now ready for that? (since you have
            used it for the
            example you sent to Paul, it seems to be ready; otherwise if
            you need more
            time for that let us do it next week, no problem).

            Thanks a lot,
            Best regards,

            Dimitri.

            On 18/06/2014 05:02, Xie Zhinan wrote:

                add a more flexible function for scale factor and fix one error in create_mass_matrices.f90

                Pull request https://github.com/geodynamics/specfem3d/pull/165

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

4/ add support for the LDDRK time scheme in addition to Newmark; that is easy to do because LDDRK is already implemented in SPECFEM3D_GLOBE (using the flag USE_LDDRK), thus it would be easy to cut and paste it from there. That would be extremely useful because for fluid/solid media (for instance in ocean acoustics) we will often need high accuracy.

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

5/ (less urgent, optional) study the possibility to have no damping profile paramater to define the PML and just make the damping tend to exactly zero on the outer edges of the PML, as in Bermudez et al (2007); I am not sure if that could be useful or not (the only advantage I see is that then there is no need to select any damping factor d0 or d(x) apart from the thickness of the PML)

Subject: Bermudez (2007)
Date: Sat, 29 Nov 2014 17:34:46 +0100
From: Dimitri Komatitsch
Organization: CNRS, Marseille, France
To: Zhinan Xie 谢志南,  René Matzen, Paul Cristini

Hi Zhinan and René,

What do you think of the approach of Bermudez et al (2007) to make the
damping profile linear and also reach zero on the outer edge of the
domain in order to reduce the number of damping parameters to adjust in
the PML model? (i.e. when doing so the only thing to optimize / to
choose is the thickness of the PML, but there is no more damping profile
to choose / to optimize for).

http://dl.acm.org/citation.cfm?id=1233233

Thanks,
Best wishes,

Dimitri.

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

6/ (less urgent, optional) use weights in Scotch decomposition for C-PML elements in the code, see https://github.com/geodynamics/specfem3d/issues/18

